/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package main.java.com.fluid;

import javax.swing.JList;
import javax.swing.JOptionPane;


/**
 * This class is the window to list all of the favorites
 *
 * @author James Kimmell <jkimmell@fluid.com>
 */
public class FavoritesWindow extends javax.swing.JFrame {
    /**
     * FavoritesWindow
     */
    private FavoritesList favorites;
    
    /**
     * Instance of the Add Favorite Window
     */
    private AddFavoriteWindow addFavoriteWindow;
    
    /**
     * Current Favorite Being Viewed
     */
    private Favorite currentFavorite;

    /**
     * Add Window Setter
     *
     * @param addFavoriteWindow
     */
    public void setAddFavoriteWindow(AddFavoriteWindow addFavoriteWindow) {
        this.addFavoriteWindow = addFavoriteWindow;
    }

    /**
     * Creates new form FavoritesWindow
     */
    public FavoritesWindow() {
        initComponents();

        //We don't want to close the application when this window close
        this.setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
    }

    /**
     * FavoritesWindow Setter
     *
     * @param favorites
     */
    public void favorites(FavoritesList favorites) {
        this.favorites = favorites;
    }
    
    public void showAddWindow() {
        this.addFavoriteWindow.setVisible(true);
    }
    
    public JList getFavoritesList() {
        return this.favoritesDisplayList;
    }
    
    public void showFavorite (Favorite favorite) {
        this.currentFavorite = favorite;
        
        this.favoriteURL.setText(favorite.getBaseUrl());
        this.favoriteUsername.setText(favorite.getUsername());
        this.favoritePassword.setText(favorite.getPassword());
    }
    
    public void emptyFavorite () {
        this.favoriteURL.setText("");
        this.favoriteUsername.setText("");
        this.favoritePassword.setText("");        
    }
    
    /**
     * Hide / Show the characters masked by the password field
     * @param showPassword 
     */
    public void hideShowPassword (boolean showPassword) {
        if (showPassword) {
            this.favoritePassword.setEchoChar((char) 0);
        } else {
            this.favoritePassword.setEchoChar('â€¢');
        }
    }
    
    /**
     * Save the currently being edited favorite
     */
    public boolean saveCurrentFavorite () {
        this.currentFavorite.setUsername(this.favoriteUsername.getText());
        this.currentFavorite.setPassword(new String(this.favoritePassword.getPassword()));
        
        try {
            this.currentFavorite.setBaseUrl(this.favoriteURL.getText());
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            return false;
        }        
        
        this.favorites.saveFavoritesToFile();
        
        return true;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        favoritesDisplayList = new javax.swing.JList();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        favoriteURL = new javax.swing.JTextField();
        favoriteUsername = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        deleteFavoriteButton = new javax.swing.JButton();
        favoritePassword = new javax.swing.JPasswordField();
        addFavoriteButton = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        hideShowPasswordCheck = new javax.swing.JCheckBox();
        saveFavoriteButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Favorites");

        favoritesDisplayList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        favoritesDisplayList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                favoritesDisplayListValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(favoritesDisplayList);

        jLabel1.setText("URL");

        jLabel2.setText("Username");

        jLabel3.setText("Password");

        jLabel4.setFont(new java.awt.Font("Lucida Grande", 1, 24)); // NOI18N
        jLabel4.setText("Favorite");

        deleteFavoriteButton.setText("Delete Favorite");
        deleteFavoriteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteFavoriteButtonActionPerformed(evt);
            }
        });

        addFavoriteButton.setText("Add Favorite");
        addFavoriteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addFavoriteButtonActionPerformed(evt);
            }
        });

        jLabel5.setText("Show Password?");

        hideShowPasswordCheck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hideShowPasswordCheckActionPerformed(evt);
            }
        });

        saveFavoriteButton.setText("Save Favorite");
        saveFavoriteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveFavoriteButtonActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, layout.createSequentialGroup()
                        .addContainerGap()
                        .add(addFavoriteButton, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 246, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .add(saveFavoriteButton)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(deleteFavoriteButton)
                        .addContainerGap())
                    .add(layout.createSequentialGroup()
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(layout.createSequentialGroup()
                                .add(jLabel5, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 128, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                                .add(hideShowPasswordCheck)
                                .add(0, 0, Short.MAX_VALUE))
                            .add(layout.createSequentialGroup()
                                .add(jLabel3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 128, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                                .add(favoritePassword, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 539, Short.MAX_VALUE))
                            .add(jLabel4, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .add(layout.createSequentialGroup()
                                .add(jLabel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 128, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                                .add(favoriteURL))
                            .add(layout.createSequentialGroup()
                                .add(jLabel2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 128, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                                .add(favoriteUsername))))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(jLabel4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 45, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel1)
                    .add(favoriteURL, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel2)
                    .add(favoriteUsername, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel3)
                    .add(favoritePassword, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(layout.createSequentialGroup()
                        .add(7, 7, 7)
                        .add(jLabel5))
                    .add(hideShowPasswordCheck))
                .add(19, 19, 19)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(deleteFavoriteButton)
                    .add(saveFavoriteButton))
                .addContainerGap(349, Short.MAX_VALUE))
            .add(layout.createSequentialGroup()
                .add(jScrollPane1)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(addFavoriteButton)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void favoritesDisplayListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_favoritesDisplayListValueChanged
        if (evt.getValueIsAdjusting()) {
            return;
        }
        
        Favorite favorite = (Favorite)this.favoritesDisplayList.getSelectedValue();
        
        if (favorite != null) {
            this.showFavorite(favorite);
        }
        
    }//GEN-LAST:event_favoritesDisplayListValueChanged

    private void deleteFavoriteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteFavoriteButtonActionPerformed
        Favorite favorite = (Favorite)this.favoritesDisplayList.getSelectedValue();

        int answer = JOptionPane.showConfirmDialog(null, "Are you sure you want to delete this favorite?", "Input", JOptionPane.YES_NO_OPTION);

        if (answer == JOptionPane.YES_OPTION) {
            this.emptyFavorite();
            this.favoritesDisplayList.clearSelection();
            this.favorites.remove(favorite);
        }
    }//GEN-LAST:event_deleteFavoriteButtonActionPerformed

    private void addFavoriteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addFavoriteButtonActionPerformed
        addFavoriteWindow.setVisible(true);
    }//GEN-LAST:event_addFavoriteButtonActionPerformed

    private void hideShowPasswordCheckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hideShowPasswordCheckActionPerformed
        this.hideShowPassword(this.hideShowPasswordCheck.isSelected());
    }//GEN-LAST:event_hideShowPasswordCheckActionPerformed

    private void saveFavoriteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveFavoriteButtonActionPerformed
        this.saveCurrentFavorite();
    }//GEN-LAST:event_saveFavoriteButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addFavoriteButton;
    private javax.swing.JButton deleteFavoriteButton;
    private javax.swing.JPasswordField favoritePassword;
    private javax.swing.JTextField favoriteURL;
    private javax.swing.JTextField favoriteUsername;
    private javax.swing.JList favoritesDisplayList;
    private javax.swing.JCheckBox hideShowPasswordCheck;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton saveFavoriteButton;
    // End of variables declaration//GEN-END:variables
}
